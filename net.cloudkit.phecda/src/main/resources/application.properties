#
# Copyright (C) 2016. The CloudKit Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# ===================================================================
# COMMON SPRING BOOT PROPERTIES
#
# This sample file is provided as a guideline. Do NOT copy it in its
# entirety to your own application.               ^^^
# ===================================================================


# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------

# BANNER
# Banner file encoding.
banner.charset=UTF-8
# Banner file location.
banner.location=classpath:banner.txt

# LOGGING
# Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
logging.config=classpath:logback.xml
#logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
#logging.file= # Log file name. For instance `myapp.log`
#logging.level.*= # Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
#logging.path= # Location of the log file. For instance `/var/log`
#logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.
#logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.

# AOP
# Add @EnableAspectJAutoProxy.
spring.aop.auto=true
# Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false).
spring.aop.proxy-target-class=false

# IDENTITY (ContextIdApplicationContextInitializer)
# Application index.
#spring.application.index=
# Application name.
spring.application.name=CloudKit

# ADMIN (SpringApplicationAdminJmxAutoConfiguration)
#spring.application.admin.enabled=false # Enable admin features for the application.
#spring.application.admin.jmx-name=org.springframework.boot:type=Admin,name=SpringApplication # JMX name of the application admin MBean.

# AUTO-CONFIGURATION
# Auto-configuration classes to exclude.
#spring.autoconfigure.exclude=

# SPRING CORE
#spring.beaninfo.ignore=true # Skip search of BeanInfo classes.

server.port=8080

# HTTP message conversion
# Preferred JSON mapper to use for HTTP message conversion. Set to "gson" to force the use of Gson when both it and Jackson are on the classpath.
spring.http.converters.preferred-json-mapper=jackson

# HTTP encoding (HttpEncodingProperties)
# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=UTF-8
# Enable http encoding support.
spring.http.encoding.enabled=true
# Force the encoding to the configured charset on HTTP requests and responses.
spring.http.encoding.force=true

# JACKSON (JacksonProperties)
# Date format string or a fully-qualified date format class name. For instance `yyyy-MM-dd HH:mm:ss`.
# spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ssXXX
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#spring.jackson.deserialization.*= # Jackson on/off features that affect the way Java objects are deserialized.
#spring.jackson.generator.*= # Jackson on/off features for generators.
#spring.jackson.joda-date-time-format= # Joda date time format string. If not configured, "date-format" will be used as a fallback if it is configured with a format string.
# Locale used for formatting.
spring.jackson.locale=zh_CN
#spring.jackson.mapper.*= # Jackson general purpose on/off features.
#spring.jackson.parser.*= # Jackson on/off features for parsers.
#spring.jackson.property-naming-strategy= # One of the constants on Jackson's PropertyNamingStrategy. Can also be a fully-qualified class name of a PropertyNamingStrategy subclass.
#spring.jackson.serialization.*= # Jackson on/off features that affect the way Java objects are serialized.
#spring.jackson.serialization-inclusion= # Controls the inclusion of properties during serialization. Configured with one of the values in Jackson's JsonInclude.Include enumeration.
# Time zone used when formatting dates. For instance `America/Los_Angeles`
spring.jackson.time-zone=Asia/Shanghai

# SPRING MVC (WebMvcProperties)
#spring.mvc.async.request-timeout= # Amount of time (in milliseconds) before asynchronous request handling times out.
#spring.mvc.date-format= # Date format to use. For instance `dd/MM/yyyy`.
#spring.mvc.dispatch-trace-request=false # Dispatch TRACE requests to the FrameworkServlet doService method.
#spring.mvc.dispatch-options-request=false # Dispatch OPTIONS requests to the FrameworkServlet doService method.
# Enable resolution of favicon.ico.
spring.mvc.favicon.enabled=true
#spring.mvc.ignore-default-model-on-redirect=true # If the content of the "default" model should be ignored during redirect scenarios.
# Locale to use.
spring.mvc.locale=zh_CN
# Maps file extensions to media types for content negotiation.
# text/plain;charset=UTF-8,text/html;charset=UTF-8,
spring.mvc.media-types.*=application/json;charset=UTF-8
# Formatting strategy for message codes. For instance `PREFIX_ERROR_CODE`. PREFIX_ERROR_CODE / POSTFIX_ERROR_CODE
spring.mvc.message-codes-resolver-format=PREFIX_ERROR_CODE
# Path pattern used for static resources.
spring.mvc.static-path-pattern=/**
# If a "NoHandlerFoundException" should be thrown if no Handler was found to process a request.
#spring.mvc.throw-exception-if-no-handler-found=false
# Spring MVC view prefix.
spring.mvc.view.prefix=/views/
# Spring MVC view suffix.
spring.mvc.view.suffix=.jsp

# SPRING RESOURCES HANDLING (ResourceProperties)
# Enable default resource handling.
spring.resources.add-mappings=true
# Cache period for the resources served by the resource handler, in seconds.
spring.resources.cache-period=300000
# Enable caching in the Resource chain.
spring.resources.chain.cache=true
# Enable the Spring Resource Handling chain. Disabled by default unless at least one strategy has been enabled.
spring.resources.chain.enabled=true
# Enable HTML5 application cache manifest rewriting.
spring.resources.chain.html-application-cache=false
# Enable the content Version Strategy. ${urls.getForLookupPath('/resources/javascripts/main.js')}
spring.resources.chain.strategy.content.enabled=true
# Comma-separated list of patterns to apply to the Version Strategy.
spring.resources.chain.strategy.content.paths=/resources/**
# Enable the fixed Version Strategy.
spring.resources.chain.strategy.fixed.enabled=true
# Comma-separated list of patterns to apply to the Version Strategy.
spring.resources.chain.strategy.fixed.paths=/resources/**
# Version string to use for the Version Strategy.
spring.resources.chain.strategy.fixed.version=v16.1.6.1
# Locations of static resources. classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

# REDIS (RedisProperties)
# Database index used by the connection factory.
spring.redis.database=0
# Redis server host. agï¼š localhost 121.42.164.121
spring.redis.host=121.42.164.121
# Login password of the redis server.
spring.redis.password=
# Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
spring.redis.pool.max-active=8
# Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
spring.redis.pool.max-idle=8
# Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
spring.redis.pool.max-wait=-1
# Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.pool.min-idle=0
# Redis server port.
spring.redis.port=6379
# Name of Redis server.
#spring.redis.sentinel.master=
# Comma-separated list of host:port pairs.
#spring.redis.sentinel.nodes=
# Connection timeout in milliseconds.
spring.redis.timeout=0
